#! /bin/bash

# fail fast
set -euo pipefail

# echo "Loading containers"

# for container in "mono" "crossbar" "eventstore" "nginx" "dnupackage" "nodemodules"
# do
#   if [[ -e ~/docker/$container.tar ]]; then 
#     docker load -i ~/docker/$container.tar && echo "$container loaded" 
#   fi
# done

. ../config

if [[ ! -e ~/packages/${dnupackageContainer}.tar || ! -e ~/packages/${nodemodulesContainer}.tar ]];then
  echo "no packages found"
  exit 0
fi

echo "start a backup container ..."
alwaysCommand="while true; do echo ping; sleep 60; done"
restoreContainer="loadpackagecontainer"

docker rm ${restoreContainer} || true 
docker run -d                                   \
  --name ${restoreContainer}                    \
  -v ${dnupackageContainer}:/package            \
  -v ${nodemodulesContainer}:/nodemodules       \
  ${ubuntuContainer} bash -c "${alwaysCommand}"

echo "copy packages to the container ..."
docker cp ~/packages/${dnupackageContainer}.tar \
          ${restoreContainer}:/tmp/${dnupackageContainer}.tar 
docker cp ~/packages/${nodemodulesContainer}.tar \
          ${restoreContainer}:/tmp/${nodemodulesContainer}.tar

echo "untar into the container"

command1="cd /tmp && tar xvf /tmp/${dnupackageContainer}.tar && cp -r data/* /package"
command2="cd /tmp && tar xvf /tmp/${nodemodulesContainer}.tar  && cp -r data/* /nodemodules"

if [[ ${CI} == true ]];then
  sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' ${restoreContainer})" -- bash -c ${command1}
  sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' ${restoreContainer})" -- bash -c ${command2}
else
  docker exec -t ${restoreContainer} bash -c "${command1}"
  docker exec -t ${restoreContainer} bash -c "${command2}"
fi
