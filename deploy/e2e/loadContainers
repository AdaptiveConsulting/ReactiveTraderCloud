#! /bin/bash

circleci=${CI}

# fail fast
set -euo pipefail

# echo "Loading containers"

# for container in "mono" "crossbar" "eventstore" "nginx" "dnupackage" "nodemodules"
# do
#   if [[ -e ~/docker/$container.tar ]]; then 
#     docker load -i ~/docker/$container.tar && echo "$container loaded" 
#   fi
# done

. ../config

if [[ ! -e ~/packages/${dnupackageContainer}.tar || ! -e ~/packages/${nodemodulesContainer}.tar ]];then
  echo "no packages found"
  exit 0
fi

echo "start a backup container ..."

restoreContainer="loadpackagecontainer"
initCommand="mkdir -p /tmp/${dnupackageContainer}"
initCommand="$initCommand && mkdir -p /tmp/${nodemodulesContainer}"
initCommand="$initCommand && mkdir -p /tmp/${npmCacheContainer}"
initCommand="$initCommand && while true; do echo ping; sleep 60; done"

docker rm ${restoreContainer} || true 
docker run -d                             \
  --name ${restoreContainer}              \
  -v ${dnupackageContainer}:/package      \
  -v ${nodemodulesContainer}:/nodemodules \
  -v ${npmCacheContainer}:/root/.npm      \
  ${ubuntuContainer}                      \
  bash -c "${initCommand}"

echo "copy packages to the container ..."
docker cp ~/packages/${dnupackageContainer}.tar \
          ${restoreContainer}:/tmp/${dnupackageContainer}/data.tar 
docker cp ~/packages/${nodemodulesContainer}.tar \
          ${restoreContainer}:/tmp/${nodemodulesContainer}/data.tar
docker cp ~/packages/${npmCacheContainer}.tar \
          ${restoreContainer}:/tmp/${npmCacheContainer}/data.tar

command1="cd /tmp/${dnupackageContainer}  && tar xvf /tmp/${dnupackageContainer}/data.tar   && cp -r data/* /package"
command2="cd /tmp/${nodemodulesContainer} && tar xvf /tmp/${nodemodulesContainer}/data.tar  && cp -r data/* /nodemodules"
command3="cd /tmp/${npmCacheContainer}    && tar xvf /tmp/${npmCacheContainer}/data.tar     && cp -r data/* /root/.npm"

echo "untar into the container ..."
if [[ ${circleci} == true ]];then
  echo "circleci detected"
  sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' ${restoreContainer})" -- bash -c "${command1}"
  sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' ${restoreContainer})" -- bash -c "${command2}"
  sudo lxc-attach -n "$(docker inspect --format '{{.Id}}' ${restoreContainer})" -- bash -c "${command3}"
else
  docker exec -t ${restoreContainer} bash -c "${command1}"
  docker exec -t ${restoreContainer} bash -c "${command2}"
  docker exec -t ${restoreContainer} bash -c "${command3}"
fi
