# WARNING: Command 'deploy' in commands.deploy may override built-in CircleCI command 'deploy'
version: 2
jobs:
  release_build:
    docker:
    - image: circleci/node:latest
    steps:
    - setup_remote_docker
    - checkout
    - run:
        name: Semver Versioning "minor"
        command: |
          # npm i -g semver
          LAST_TAG="$(git describe --tags)"
          NEW_TAG="$(./semver -i minor ${LAST_TAG} || echo 1.0.0)"
          echo "export BUILD_VERSION=$NEW_TAG" >> $BASH_ENV
          echo "export DOCKER_USER=$DOCKER_USER" >> $BASH_ENV
          git tag $NEW_TAG
          echo "Created new tag: $(git describe --tags)"
    - run:
        command: |
          # set environment variables for deployment stage
          echo "export DEPLOY_TARGET=dev" >> $BASH_ENV
          cat ${BASH_ENV}
          mkdir -p /tmp/vars
          echo "export DEPLOY_TARGET=$DEPLOY_TARGET" >> /tmp/vars/env
          echo "export BUILD_VERSION=$BUILD_VERSION" >> /tmp/vars/env
          ls /tmp/vars
          cat /tmp/vars/env
    - persist_to_workspace:
        root: /tmp/workspace
        paths: /tmp/vars/*
  deploy_to_env:
    docker:
    - image: google/cloud-sdk
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run:
        command: |-
          ls /tmp ls /tmp/workspace ls /tmp/workspace/tmp/vars
          cat $BASH_ENV cat /tmp/vars/env >> $BASH_ENV; cat $BASH_ENV
workflows:
  version: 2
  main:
    jobs:
    - release_build:
        filters:
          branches:
            only: feat/semver-builds
    - deploy_to_env:
        filters:
          branches:
            only: feat/semver-builds
        requires:
        - release_build

# Original config.yml file:
# version: 2.1
# commands:
#   semver:
#     description: \"Setup semver version for this release\"
#     parameters:
#       bump:
#         default: \"minor\"
#         description: The semver bump type. Must be one of \"major\", \"minor\", \"patch\".
#         type: enum
#         enum: [\"major\", \"minor\", \"patch\"]
#     steps:
#       - run:
#           name: Semver Versioning \"<< parameters.bump >>\"
#           command: |
#             # npm i -g semver
#             LAST_TAG=\"$(git describe --tags)\"
#             NEW_TAG=\"$(./semver -i << parameters.bump >> ${LAST_TAG} || echo 1.0.0)\"
#             echo \"export BUILD_VERSION=$NEW_TAG\" >> $BASH_ENV
#             echo \"export DOCKER_USER=$DOCKER_USER\" >> $BASH_ENV
#             git tag $NEW_TAG
#             echo \"Created new tag: $(git describe --tags)\"
#   build_images:
#     description: \"Build the deployable container images\"
#     steps:
#       - run:
#           name: Build Images
#           command: docker-compose -f ./src/docker-compose.yml -f ./src/docker-compose.deploy.yml build
#   run_tests:
#     description: \"Runs the integration tests\"
#     steps:
#       - run:
#           name: Integration Tests
#           command: docker-compose -f ./src/docker-compose.e2e.yml -f ./src/docker-compose.yml run integration
#   push_images:
#     steps:
#       - run:
#           name: Push Images
#           command: |
#             echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
#             docker-compose -f src/docker-compose.deploy.yml -f src/docker/compose.yml \\
#               push \\
#                 broker \\
#                 nginx \\
#                 eventstore \\
#                 servers \\
#                 nlp \\
#                 bot \\
#                 pricehistory
#   deploy:
#     description: \"Deploy the specific version to gcloud\"
#     # parameters:
#     #   version:
#     #     description: The environment variable specifiying the version to deploy. Must already be hosted on dockerhub
#     #     type: env_var_name
#     #   environment:
#     #     description: The environment variable containing the environment to deploy to. One of \"dev\", \"demo\"
#     #     type: env_var_name
#     steps:
#       - run: |
#           echo $BASH_ENV
#           # echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
#           # gcloud config set project ${GOOGLE_PROJECT_ID}
#           # gcloud config set compute/zone ${GOOGLE_COMPUTE_ZONE}
#           # gcloud container clusters get-credentials cluster
#           # # TODO: use docker stack deploy?
# 
# jobs:
#   release_build:
#     docker:
#       - image: circleci/node:latest
#     # machine:
#     #   docker_layer_caching: true
#     #   image: circleci/buildpack-deps:18.04-dind
#     steps:
#       - setup_remote_docker
#       - checkout
#       - semver:
#           bump: minor
#       - run: |
#           # set environment variables for deployment stage
#           echo \"export DEPLOY_TARGET=dev\" >> $BASH_ENV
#           cat ${BASH_ENV}
#           mkdir -p /tmp/vars
#           echo \"export DEPLOY_TARGET=$DEPLOY_TARGET\" >> /tmp/vars/env
#           echo \"export BUILD_VERSION=$BUILD_VERSION\" >> /tmp/vars/env
#           ls /tmp/vars
#           cat /tmp/vars/env
#       - persist_to_workspace:
#           root: /tmp/workspace
#           paths: /tmp/vars/*
#       # - build_images
#       # - run_tests
# 
#   deploy_to_env:
#     docker:
#       - image: google/cloud-sdk
#     steps:
#       - attach_workspace:
#           at: /tmp/workspace
#       - run:
#           ls /tmp
#           ls /tmp/workspace
#           ls /tmp/workspace/tmp/vars
# 
#           cat $BASH_ENV
#           cat /tmp/vars/env >> $BASH_ENV;
#           cat $BASH_ENV
# 
# workflows:
#   version: 2.1
#   main:
#     jobs:
#       - release_build:
#           filters:
#             branches:
#               only: feat/semver-builds
#       - deploy_to_env:
#           requires:
#             - release_build
#           filters:
#             branches:
#               only: feat/semver-builds