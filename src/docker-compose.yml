version: '3'
services:
  eventstore:
    container_name: eventstore
    image: ${DOCKER_USER}/eventstore:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./services/eventstore
  broker:
    image: ${DOCKER_USER}/broker:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./services/broker
    ports:
      - '8000:8000'
  dotnetbase:
    image: ${DOCKER_USER}/dotnetbase:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./server/dotNet
  servers:
    image: ${DOCKER_USER}/servers:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./server/dotNet
    depends_on:
      - broker
      - eventstore
      - referencedataread
      - pricing
      - blotter
      - tradeexecution
    command: dotnet ./Adaptive.ReactiveTrader.Server.Launcher.dll config.prod.json --populate-eventstore
  nginx:
    image: ${DOCKER_USER}/nginx:${BUILD_VERSION}
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./services/nginx
    ports:
      - '80:80'
  client:
    image: ${DOCKER_USER}/client:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./client
      args:
        - CI=true
        - REACT_APP_BUILD_VERSION=${BUILD_VERSION}
    depends_on:
      - servers
  analytics:
    image: ${DOCKER_USER}/analytics:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./server/dotNet
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Analytics.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
  pricing:
    image: ${DOCKER_USER}/pricing:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./server/dotNet
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Pricing.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - analytics
  referencedataread:
    image: ${DOCKER_USER}/referencedataread:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./server/dotNet
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.ReferenceDataRead.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - pricing
  tradeexecution:
    image: ${DOCKER_USER}/tradeexecution:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./server/dotNet
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.TradeExecution.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - referencedataread
  blotter:
    image: ${DOCKER_USER}/blotter:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./server/dotNet
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Blotter.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - tradeexecution
  pricehistory:
    image: ${DOCKER_USER}/pricehistory:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile.dev
      context: ./server/node/priceHistory
    depends_on:
      - broker
      - pricing
    environment:
     - BROKER_HOST=broker
     - BROKER_PORT=8000
  nlp:
    image: ${DOCKER_USER}/nlp:${BUILD_VERSION}
    hostname: nlp
    build:
      dockerfile: Nlp.Dockerfile
      context: ./server/node
    depends_on:
      - broker
    environment:
      - BROKER_HOST=broker
      - BROKER_PORT=8000
  openfinconfig:
    image: ${DOCKER_USER}/openfinconfig:${BUILD_VERSION}
    hostname: openfinconfig
    build:
      dockerfile: OpenfinConfig.Dockerfile
      context: ./server/node
  bot:
    hostname: bot
    image: ${DOCKER_USER}/bot:${BUILD_VERSION}
    build:
      context: ./server/node/bot
