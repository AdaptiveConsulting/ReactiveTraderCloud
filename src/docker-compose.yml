version: '3'
services:
  # infrastructure
  eventstore:
    image: eventstore/eventstore:release-5.0.9
    environment:
    - EVENTSTORE_DB=/db
    - EVENTSTORE_WRITE_STATS_TO_DB=false
  broker:
    image: ${DOCKER_USER}/broker:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./services/broker
    ports:
      - '5672:5672'
      - '15674:15674'
  servers:
    image: ${DOCKER_USER}/servers:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./server/dotNet
  initialise:
    image: ${DOCKER_USER}/servers:${BUILD_VERSION}
    depends_on:
      - broker
      - eventstore
    command: dotnet ./Adaptive.ReactiveTrader.Server.Launcher.dll config.prod.json --populate-eventstore
  analytics:
    image: ${DOCKER_USER}/servers:${BUILD_VERSION}
    hostname: analytics
    container_name: analytics
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Analytics.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - initialise
    restart: always
  pricing:
    image: ${DOCKER_USER}/servers:${BUILD_VERSION}
    hostname: pricing
    container_name: pricing
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Pricing.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - analytics
    restart: always
  referencedataread:
    image: ${DOCKER_USER}/servers:${BUILD_VERSION}
    hostname: referencedataread
    container_name: referencedataread
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.ReferenceDataRead.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - pricing
    restart: always
  tradeexecution:
    image: ${DOCKER_USER}/servers:${BUILD_VERSION}
    hostname: tradeexecution
    container_name: tradeexecution
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.TradeExecution.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - referencedataread
    restart: always
  blotter:
    image: ${DOCKER_USER}/servers:${BUILD_VERSION}
    hostname: blotter
    container_name: blotter
    command: 'dotnet ./Adaptive.ReactiveTrader.Server.Blotter.dll config.prod.json'
    depends_on:
      - broker
      - eventstore
      - tradeexecution
    restart: always
  # node services
  pricehistory:
    image: ${DOCKER_USER}/pricehistory:${BUILD_VERSION}
    build:
      dockerfile: PriceHistory.Dockerfile
      context: ./server/node
    depends_on:
      - broker
      - pricing
    environment:
      - BROKER_HOST=broker
      - BROKER_PORT=15674
  nlp:
    image: ${DOCKER_USER}/nlp:${BUILD_VERSION}
    hostname: nlp
    build:
      dockerfile: Nlp.Dockerfile
      context: ./server/node
    depends_on:
      - broker
    environment:
      - BROKER_HOST=broker
      - BROKER_PORT=15674
  bot:
    hostname: bot
    image: ${DOCKER_USER}/bot:${BUILD_VERSION}
    build:
      context: ./server/node/bot
    depends_on:
      - broker
  # web client
  client:
    image: ${DOCKER_USER}/client:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./client
      args:
        - CI=true
        - NPM_TOKEN=${NPM_TOKEN}
        - REACT_APP_BUILD_VERSION=${BUILD_VERSION}
    environment:
      - ENVIRONMENT_NAME=${ENVIRONMENT_NAME}
  new-client:
    image: ${DOCKER_USER}/new-client:${BUILD_VERSION}
    build:
      dockerfile: Dockerfile
      context: ./new-client
      args:
        - CI=true
        - REACT_APP_BUILD_VERSION=${BUILD_VERSION}
    environment:
      - ENVIRONMENT_NAME=${ENVIRONMENT_NAME}
