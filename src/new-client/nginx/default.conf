server {
    set $template_root /usr/local/openresty/nginx/html;

    listen 3000;
    
    location / {
        root /usr/local/openresty/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }
    
    # serve manifest.json
    # use a lua resty template to replace tokens with environment variables
    location = /manifest.json {
        default_type application/json;
        content_by_lua '
            local template = require "resty.template"
            local isDemo = string.match(os.getenv("ENVIRONMENT_NAME"), "demo")
            local environment_suffix = (isDemo and "" or string.format(" (%s)", string.upper(os.getenv("ENVIRONMENT_NAME"))))

            template.render("manifest.json", {
                environment_suffix = environment_suffix
            })
        ';
    }

    location = /openfin/app.json {
        default_type application/json;
        content_by_lua '
            local template = require "resty.template"
            local isDemo = string.match(os.getenv("ENVIRONMENT_NAME"), "demo")
            local environment_suffix = (isDemo and "" or string.format(" (%s)", string.upper(os.getenv("ENVIRONMENT_NAME"))))

            template.render("openfin/app.json", {
                host_url = ngx.var.http_x_forwarded_proto .. "://" .. ngx.var.http_host,
                environment = os.getenv("ENVIRONMENT_NAME"),
                environment_suffix = environment_suffix
            })
        ';
    }

    location = /openfin/launcher.json {
        default_type application/json;
        content_by_lua '
            local template = require "resty.template"
            local isDemo = string.match(os.getenv("ENVIRONMENT_NAME"), "demo")
            local environment_suffix = (isDemo and "" or string.format(" (%s)", string.upper(os.getenv("ENVIRONMENT_NAME"))))

            template.render("openfin/launcher.json", {
                host_url = ngx.var.http_x_forwarded_proto .. "://" .. ngx.var.http_host,
                environment = os.getenv("ENVIRONMENT_NAME"),
                environment_suffix = environment_suffix
            })
        ';
    }
}
